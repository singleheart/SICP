(define (cont-frac n d k)
  (define (rec i)
    (if (= i k)
       (/ (n i) (d i))
       (/ (n i) (+ (d i) (rec (+ i 1))))))
  (define (iter result i)
    (if (= i 0)
       result
       (iter (/ (n i) (+ (d i) result)) (- i 1))))
  (iter 0 k))
(define (euler-expansion k)
  (cont-frac (lambda (i) 1.0) 
            (lambda (i) 
              (if (= (remainder i 3) 2)                 
                 (* 2 (+ 1 (/ (- i 2) 3)))
                 1))
            k))