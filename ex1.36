(define tolerance 0.00001)
(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (let ((next (f guess)))      
      (display next)
      (newline)
      (if (close-enough? guess next)
          next
          (try next))))
  (try first-guess))
(define (average a b)
  (/ (+ a b) 2))
(define (sqrt x)
  (fixed-point (lambda (y) (average y (/ x y)))
               1.0))
(define (root first-guess)
  (fixed-point (lambda (x) (/ (log 1000) (log x))) first-guess))
(define (root-damping first-guess)
  (fixed-point (lambda (x) (average x (/ (log 1000) (log x)))) first-guess))