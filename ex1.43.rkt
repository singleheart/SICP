(define (compose f g)
  (lambda (x)
    (f (g x))))
(define (repeated f n)
  (lambda (x)
    (define (recr n)
      (if (= n 1)
          (f x)
          (f (recr (- n 1)))))
    (recr n)))
(define (repeated-compose f n)
  (if (= n 1)
      f
      (compose f (repeated-compose f (- n 1)))))
(define (square x)
  (* x x))
(define (inc x)
  (+ x 1))
((repeated square 2) 5)
((repeated-compose square 2) 5)